import React, { useState } from "react";
import blogImg from "../assets/blog.jpg";

const documents = [
  {
    title: "H∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã HIV cho ng∆∞·ªùi m·ªõi ph√°t hi·ªán",
    description:
      "T√†i li·ªáu c∆° b·∫£n gi√∫p b·∫°n hi·ªÉu v·ªÅ c√°c b∆∞·ªõc ƒëi·ªÅu tr·ªã ban ƒë·∫ßu, x√©t nghi·ªám c·∫ßn thi·∫øt v√† t∆∞ v·∫•n t√¢m l√Ω.",
    link: "https://www.prepwatch.org/wp-content/uploads/2019/05/Care_and_Treatment_Guidelines_Vietnam_2017.pdf",
  },
  {
    title: "T√†i li·ªáu gi√°o d·ª•c ph√≤ng ng·ª´a HIV",
    description:
      "Th√¥ng tin gi√∫p b·∫°n hi·ªÉu c√°ch ph√≤ng tr√°nh l√¢y nhi·ªÖm HIV trong c·ªông ƒë·ªìng v√† trong gia ƒë√¨nh.",
    link: "https://asttmoh.vn/wp-content/uploads/2015/05/Tai-lieu-dao-tao-HIV.AIDS-Trung-cap-Y.pdf",
  },
];

const blogPosts = [
  {
    title: "Ng∆∞·ªùi s·∫ª chia kh·ªßng ho·∫£ng, bu·ªìn vui c√πng b·ªánh nh√¢n HIV",
    description:
      "SKƒêS - Ng∆∞·ªùi nhi·ªÖm HIV th∆∞·ªùng nghƒ© r·∫±ng, h·ªç s·∫Ω nh·∫≠n ƒë∆∞·ª£c s·ª± k·ª≥ th·ªã, xa l√°nh... thay v√¨ th∆∞∆°ng c·∫£m, s·∫ª chia t·ª´ c·ªông ƒë·ªìng.",
    link: "https://bvquan5.medinet.gov.vn/chuyen-muc/nguoi-se-chia-khung-hoang-buon-vui-cung-benh-nhan-hiv-c16896-131217.aspx",
  },
  {
    title: "8 c√°ch ƒë·ªÉ h·ªó tr·ª£ ƒëi·ªÅu tr·ªã HIV hi·ªáu qu·∫£ v√† tƒÉng c∆∞·ªùng h·ªá mi·ªÖn d·ªãch",
    description:
      "Thu·ªëc ƒëi·ªÅu tr·ªã HIV l√† ch√¨a kh√≥a ƒë·ªÉ b·ªánh nh√¢n HIV kh·ªèe m·∫°nh khi s·ªëng chung v·ªõi lo·∫°i virus n√†y.",
    link: "https://vaac.gov.vn/8-cach-de-ho-tro-dieu-tri-hiv-hieu-qua-va-tang-cuong-he-mien-dich.html",
  },
  {
    title: "L·ªùi khuy√™n b·ªï √≠ch cho ng∆∞·ªùi nhi·ªÖm HIV/AIDS",
    description:
      "ƒê·ªëi v·ªõi nh·ªØng ng∆∞·ªùi nhi·ªÖm HIV/AIDS, c·∫ßn th√™m vitamin v√† kho√°ng ch·∫•t ƒë·ªÉ gi√∫p s·ª≠a ch·ªØa v√† ch·ªØa l√†nh c√°c t·∫ø b√†o b·ªã h∆∞ h·ªèng.",
    link: "https://moh.gov.vn/chuong-trinh-muc-tieu-quoc-gia/-/asset_publisher/7ng11fEWgASC/content/loi-khuyen-bo-ich-cho-nguoi-nhiem-hiv-aids",
  },
];

const faqItems = [
  {
    question: "HIV l√† g√¨ v√† l√¢y truy·ªÅn qua nh·ªØng con ƒë∆∞·ªùng n√†o?",
    shortAnswer:
      "HIV l√† virus g√¢y suy gi·∫£m mi·ªÖn d·ªãch, l√¢y qua m√°u, t√¨nh d·ª•c kh√¥ng an to√†n v√† t·ª´ m·∫π sang con.",
    detailedContent: (
      <>
        <p className="text-gray-700 mb-3">
          HIV (Human Immunodeficiency Virus) l√† virus l√†m suy y·∫øu h·ªá th·ªëng mi·ªÖn d·ªãch c·ªßa con ng∆∞·ªùi, khi·∫øn c∆° th·ªÉ d·ªÖ m·∫Øc c√°c b·ªánh nhi·ªÖm tr√πng v√† ung th∆∞.
        </p>
        <p className="text-gray-700 mb-3 font-semibold">C√°c con ƒë∆∞·ªùng l√¢y truy·ªÅn ch√≠nh:</p>
        <ul className="list-disc pl-5 mb-4 text-gray-700">
          <li>Quan h·ªá t√¨nh d·ª•c kh√¥ng an to√†n (qua ƒë∆∞·ªùng √¢m ƒë·∫°o, h·∫≠u m√¥n, ho·∫∑c mi·ªáng n·∫øu c√≥ v·∫øt th∆∞∆°ng)</li>
          <li>D√πng chung kim ti√™m ho·∫∑c c√°c d·ª•ng c·ª• ti√™m ch√≠ch</li>
          <li>Truy·ªÅn m√°u ho·∫∑c ch·∫ø ph·∫©m m√°u nhi·ªÖm HIV (r·∫•t hi·∫øm hi·ªán nay do s√†ng l·ªçc m√°u t·ªët)</li>
          <li>Truy·ªÅn t·ª´ m·∫π sang con trong thai k·ª≥, l√∫c sinh ho·∫∑c cho con b√∫</li>
        </ul>
      </>
    ),
  },
  {
    question: "Ng∆∞·ªùi nhi·ªÖm HIV c√≥ th·ªÉ s·ªëng b√¨nh th∆∞·ªùng kh√¥ng?",
    shortAnswer:
      "V·ªõi ƒëi·ªÅu tr·ªã ARV ƒë√∫ng c√°ch, ng∆∞·ªùi nhi·ªÖm HIV c√≥ th·ªÉ s·ªëng kh·ªèe m·∫°nh v√† g·∫ßn nh∆∞ b√¨nh th∆∞·ªùng.",
    detailedContent: (
      <>
        <p className="text-gray-700 mb-3">
          Ng√†y nay, HIV kh√¥ng c√≤n l√† √°n t·ª≠. Nh·ªù ƒëi·ªÅu tr·ªã b·∫±ng thu·ªëc kh√°ng virus (ARV), ng∆∞·ªùi nhi·ªÖm HIV c√≥ th·ªÉ s·ªëng l√¢u d√†i, kh·ªèe m·∫°nh, v√† h√≤a nh·∫≠p c·ªông ƒë·ªìng.
        </p>
        <ul className="list-disc pl-5 mb-4 text-gray-700">
          <li>Tu√¢n th·ªß ƒëi·ªÅu tr·ªã gi√∫p gi·∫£m t·∫£i l∆∞·ª£ng virus xu·ªëng m·ª©c kh√¥ng th·ªÉ ph√°t hi·ªán</li>
          <li>Ng∆∞·ªùi nhi·ªÖm HIV c√≥ th·ªÉ l√†m vi·ªác, h·ªçc t·∫≠p, sinh ho·∫°t, l·∫≠p gia ƒë√¨nh nh∆∞ ng∆∞·ªùi kh√¥ng nhi·ªÖm</li>
          <li>Ph·ª• n·ªØ nhi·ªÖm HIV v·∫´n c√≥ th·ªÉ sinh con kh·ªèe m·∫°nh n·∫øu ƒëi·ªÅu tr·ªã ƒë√∫ng c√°ch</li>
        </ul>
      </>
    ),
  },
  {
    question: "L√†m th·∫ø n√†o ƒë·ªÉ ph√≤ng tr√°nh l√¢y nhi·ªÖm HIV?",
    shortAnswer:
      "S·ª≠ d·ª•ng bao cao su, kh√¥ng d√πng chung kim ti√™m, x√©t nghi·ªám ƒë·ªãnh k·ª≥ v√† ƒëi·ªÅu tr·ªã s·ªõm n·∫øu nhi·ªÖm.",
    detailedContent: (
      <>
        <p className="text-gray-700 mb-3">
          Ph√≤ng tr√°nh HIV hi·ªáu qu·∫£ b·∫±ng c√°ch thay ƒë·ªïi h√†nh vi v√† duy tr√¨ c√°c bi·ªán ph√°p an to√†n:
        </p>
        <ul className="list-disc pl-5 mb-4 text-gray-700">
          <li>Lu√¥n d√πng bao cao su ƒë√∫ng c√°ch khi quan h·ªá t√¨nh d·ª•c</li>
          <li>Kh√¥ng d√πng chung b∆°m kim ti√™m ho·∫∑c d·ª•ng c·ª• c√≥ th·ªÉ g√¢y ch·∫£y m√°u</li>
          <li>X√©t nghi·ªám HIV ƒë·ªãnh k·ª≥, ƒë·∫∑c bi·ªát l√† nh√≥m nguy c∆°</li>
          <li>Tham gia ƒëi·ªÅu tr·ªã d·ª± ph√≤ng tr∆∞·ªõc ph∆°i nhi·ªÖm (PrEP) n·∫øu c√≥ nguy c∆° cao</li>
          <li>Ph·ª• n·ªØ mang thai c·∫ßn ki·ªÉm tra HIV s·ªõm ƒë·ªÉ can thi·ªáp k·ªãp th·ªùi</li>
        </ul>
      </>
    ),
  },
];

const treatmentGuides = [
  {
    title: "Ph√°c ƒë·ªì ƒëi·ªÅu tr·ªã ARV c∆° b·∫£n",
    content:
      "Thu·ªëc ARV gi√∫p ngƒÉn ch·∫∑n s·ª± ph√°t tri·ªÉn c·ªßa virus HIV trong c∆° th·ªÉ. Vi·ªác tu√¢n th·ªß ph√°c ƒë·ªì ƒëi·ªÅu tr·ªã r·∫•t quan tr·ªçng ƒë·ªÉ duy tr√¨ s·ª©c kh·ªèe v√† gi·∫£m nguy c∆° l√¢y nhi·ªÖm.",
    icon: "üíä",
  },
  {
    title: "L·ªùi khuy√™n v·ªÅ dinh d∆∞·ª°ng v√† sinh ho·∫°t",
    content:
      "B·ªï sung ƒë·∫ßy ƒë·ªß dinh d∆∞·ª°ng, t·∫≠p th·ªÉ d·ª•c ƒë·ªÅu ƒë·∫∑n, tr√°nh cƒÉng th·∫≥ng v√† gi·ªØ tinh th·∫ßn l·∫°c quan gi√∫p tƒÉng c∆∞·ªùng h·ªá mi·ªÖn d·ªãch.",
    icon: "ü•ó",
  },
];

export default function KnowledgePage() {
  const [selectedDoc, setSelectedDoc] = useState(null);
  const [openFAQIndex, setOpenFAQIndex] = useState(null);

  const toggleFAQ = (index) => {
    setOpenFAQIndex(openFAQIndex === index ? null : index);
  };

  return (
    <main className="min-h-screen bg-gradient-to-b from-gray-50 to-white px-4 sm:px-6 lg:px-8 py-12">
      {/* Header Section */}
      <section className="text-center mb-16 max-w-5xl mx-auto">
        <h1 className="text-4xl sm:text-5xl font-extrabold text-red-700 mb-4 tracking-tight animate-slide-in">
          Trang Ki·∫øn Th·ª©c HIV
        </h1>
        <p className="text-base text-gray-700 max-w-2xl mx-auto leading-relaxed font-medium">
          Th√¥ng tin ch√≠nh x√°c, chuy√™n s√¢u v√† d·ªÖ ti·∫øp c·∫≠n v·ªÅ HIV, h·ªó tr·ª£ ng∆∞·ªùi nhi·ªÖm, gia ƒë√¨nh v√† c·ªông ƒë·ªìng ƒë·ªÉ n√¢ng cao nh·∫≠n th·ª©c v√† gi·∫£m k·ª≥ th·ªã.
        </p>
      </section>

      {/* Blog Section */}
      <section className="mb-16 max-w-5xl mx-auto">
        <h2 className="text-3xl font-bold text-red-700 mb-8 text-center flex items-center justify-center gap-2 animate-slide-in">
          <span>‚úçÔ∏è</span> Blog Chia S·∫ª Kinh Nghi·ªám
        </h2>
        <div className="mb-8 relative">
          <img
            src={blogImg}
            alt="Blog c·ªông ƒë·ªìng"
            className="w-full h-64 sm:h-80 object-cover rounded-2xl shadow-lg transform hover:scale-[1.01] transition-transform duration-300"
          />
          <div className="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent rounded-2xl"></div>
        </div>
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
          {blogPosts.map(({ title, description, link }, idx) => (
            <article
              key={title}
              className="bg-white rounded-2xl shadow-md p-5 hover:shadow-lg hover:-translate-y-1 transition-all duration-200"
            >
              <h3 className="text-lg font-semibold text-gray-900 mb-3 line-clamp-2">{title}</h3>
              <p className="text-gray-600 mb-4 line-clamp-3 text-sm leading-relaxed">{description}</p>
              <a
                href={link}
                target="_blank"
                rel="noopener noreferrer"
                className="inline-flex items-center px-3 py-1.5 bg-red-700 text-white rounded-lg hover:bg-red-800 transition-colors text-sm font-medium"
              >
                ƒê·ªçc th√™m
                <svg className="w-4 h-4 ml-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M9 5l7 7-7 7" />
                </svg>
              </a>
            </article>
          ))}
        </div>
      </section>

      {/* Treatment Guides Section */}
      <section className="mb-16 max-w-5xl mx-auto">
        <h2 className="text-3xl font-bold text-red-700 mb-8 text-center flex items-center justify-center gap-2 animate-slide-in">
          <span>üíâ</span> H∆∞·ªõng D·∫´n ƒêi·ªÅu Tr·ªã
        </h2>
        <p className="text-base text-gray-700 mb-8 max-w-2xl mx-auto text-center leading-relaxed">
          Ph∆∞∆°ng ph√°p ƒëi·ªÅu tr·ªã HIV ti√™n ti·∫øn v√† l·ªùi khuy√™n thi·∫øt th·ª±c ƒë·ªÉ s·ªëng t√≠ch c·ª±c, kh·ªèe m·∫°nh.
        </p>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {treatmentGuides.map(({ title, content, icon }, idx) => (
            <div
              key={idx}
              className="bg-white rounded-2xl shadow-md p-6 flex items-start gap-3 hover:shadow-lg transition-all duration-200"
            >
              <span className="text-2xl">{icon}</span>
              <div>
                <h3 className="text-lg font-semibold text-gray-900 mb-2">{title}</h3>
                <p className="text-gray-600 text-sm leading-relaxed">{content}</p>
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* FAQ Section */}
      <section className="mb-16 max-w-5xl mx-auto">
        <h2 className="text-3xl font-bold text-red-700 mb-8 text-center flex items-center justify-center gap-2 animate-slide-in">
          <span>‚ùì</span> C√¢u H·ªèi Th∆∞·ªùng G·∫∑p (FAQ)
        </h2>
        <div className="space-y-4 max-w-3xl mx-auto">
          {faqItems.map((faq, i) => (
            <div
              key={i}
              className="bg-white rounded-2xl shadow-md border border-gray-100 overflow-hidden"
            >
              <button
                onClick={() => toggleFAQ(i)}
                className="w-full flex justify-between items-center px-6 py-4 text-left text-gray-900 font-semibold hover:bg-red-50 transition-colors"
                aria-expanded={openFAQIndex === i}
              >
                <span className="text-base">{faq.question}</span>
                <svg
                  className={`w-5 h-5 transform transition-transform duration-200 ${openFAQIndex === i ? "rotate-180" : ""}`}
                  fill="none"
                  stroke="currentColor"
                  strokeWidth="2"
                  viewBox="0 0 24 24"
                >
                  <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                </svg>
              </button>
              {openFAQIndex === i && (
                <div className="px-6 py-5 bg-red-50 text-gray-700 text-sm leading-relaxed animate-slide-down">
                  {faq.detailedContent}
                </div>
              )}
            </div>
          ))}
        </div>
      </section>

      {/* Educational Library Section */}
      <section className="mb-16 max-w-5xl mx-auto">
        <h2 className="text-3xl font-bold text-red-700 mb-8 text-center flex items-center justify-center gap-2 animate-slide-in">
          <span>üìö</span> Th∆∞ Vi·ªán T√†i Li·ªáu Gi√°o D·ª•c
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {documents.map((doc, idx) => (
            <div
              key={idx}
              className="bg-white rounded-2xl shadow-md p-6 hover:shadow-lg hover:-translate-y-1 transition-all duration-200 cursor-pointer"
              onClick={() => setSelectedDoc(doc.link)}
              role="button"
              tabIndex={0}
              onKeyDown={(e) => {
                if (e.key === "Enter" || e.key === " ") setSelectedDoc(doc.link);
              }}
            >
              <h3 className="text-lg font-semibold text-gray-900 mb-3">{doc.title}</h3>
              <p className="text-gray-600 mb-4 text-sm leading-relaxed">{doc.description}</p>
              <button
                className="inline-flex items-center px-3 py-1.5 bg-red-700 text-white rounded-lg hover:bg-red-800 transition-colors font-medium text-sm"
                onClick={(e) => {
                  e.stopPropagation();
                  setSelectedDoc(doc.link);
                }}
              >
                Xem t√†i li·ªáu
                <svg className="w-4 h-4 ml-1.5" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" d="M9 5l7 7-7 7" />
                </svg>
              </button>
            </div>
          ))}
        </div>

        {selectedDoc && (
          <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60 backdrop-blur-sm p-4 animate-fade-in">
            <div className="bg-white rounded-2xl shadow-xl w-full max-w-5xl max-h-[90vh] flex flex-col overflow-hidden">
              <header className="flex justify-between items-center bg-gradient-to-r from-red-700 to-red-800 text-white px-6 py-4 rounded-t-2xl">
                <h3 className="text-lg font-semibold">Xem T√†i Li·ªáu</h3>
                <button
                  onClick={() => setSelectedDoc(null)}
                  className="p-1.5 hover:bg-red-900 rounded-full transition"
                  aria-label="ƒê√≥ng"
                >
                  <svg className="h-6 w-6" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </header>
              <div className="flex-1 p-6 bg-gray-50 overflow-auto">
                <object
                  data={selectedDoc}
                  type="application/pdf"
                  className="w-full h-[65vh] rounded-lg bg-white shadow-inner"
                >
                  <p className="text-gray-700 p-4 text-sm">
                    Tr√¨nh duy·ªát kh√¥ng h·ªó tr·ª£ xem PDF.{" "}
                    <a
                      href={selectedDoc}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-red-700 hover:text-red-800 underline font-medium"
                    >
                      T·∫£i xu·ªëng t√†i li·ªáu
                    </a>
                  </p>
                </object>
              </div>
              <footer className="flex justify-end gap-3 px-6 py-4 border-t border-gray-200 bg-white">
                <button
                  onClick={() => window.open(selectedDoc, "_blank")}
                  className="px-4 py-1.5 bg-white border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-100 flex items-center gap-1.5 transition font-medium text-sm"
                >
                  <svg className="h-4 w-4" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
                    <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
                    <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
                  </svg>
                  M·ªü trong tab m·ªõi
                </button>
                <button
                  onClick={() => setSelectedDoc(null)}
                  className="px-4 py-1.5 bg-red-700 text-white rounded-lg hover:bg-red-800 transition font-medium text-sm"
                >
                  ƒê√≥ng
                </button>
              </footer>
            </div>
          </div>
        )}
      </section>

    </main>
  );
}