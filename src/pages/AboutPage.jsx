import React, { useState } from "react";
import healthcareImage from "../assets/healthcare.jpg";
import { FloatButton } from "antd";
import {
  MessageOutlined,
  CalendarOutlined,
  FilePdfOutlined,
  PhoneOutlined,
} from "@ant-design/icons";
import { useNavigate } from "react-router-dom";


export default function AboutPage() {
  const navigate = useNavigate();
  const [selectedDoc, setSelectedDoc] = useState(null);
  const [openFAQIndex, setOpenFAQIndex] = useState(null);

  const documents = [
    {
      title: "H∆∞·ªõng d·∫´n ƒëi·ªÅu tr·ªã HIV cho ng∆∞·ªùi m·ªõi ph√°t hi·ªán",
      description:
        "T√†i li·ªáu c∆° b·∫£n gi√∫p b·∫°n hi·ªÉu v·ªÅ c√°c b∆∞·ªõc ƒëi·ªÅu tr·ªã ban ƒë·∫ßu, x√©t nghi·ªám c·∫ßn thi·∫øt v√† t∆∞ v·∫•n t√¢m l√Ω.",
      link: "https://www.prepwatch.org/wp-content/uploads/2019/05/Care_and_Treatment_Guidelines_Vietnam_2017.pdf",
    },
    {
      title: "T√†i li·ªáu gi√°o d·ª•c ph√≤ng ng·ª´a HIV",
      description:
        "Th√¥ng tin gi√∫p b·∫°n hi·ªÉu c√°ch ph√≤ng tr√°nh l√¢y nhi·ªÖm HIV trong c·ªông ƒë·ªìng v√† trong gia ƒë√¨nh.",
      link: "https://asttmoh.vn/wp-content/uploads/2015/05/Tai-lieu-dao-tao-HIV.AIDS-Trung-cap-Y.pdf",
    },
  ];

  const faqs = [
    {
      question: "HIV l√¢y truy·ªÅn qua nh·ªØng con ƒë∆∞·ªùng n√†o?",
      answer:
        "HIV l√¢y truy·ªÅn ch·ªß y·∫øu qua ƒë∆∞·ªùng m√°u, quan h·ªá t√¨nh d·ª•c kh√¥ng an to√†n, v√† m·∫π sang con trong qu√° tr√¨nh mang thai, sinh ƒë·∫ª.",
    },
    {
      question: "T√¥i c√≥ th·ªÉ ƒëƒÉng k√Ω kh√°m ·∫©n danh kh√¥ng?",
      answer:
        "C√≥, h·ªá th·ªëng h·ªó tr·ª£ ƒëƒÉng k√Ω kh√°m v√† t∆∞ v·∫•n ·∫©n danh ƒë·ªÉ b·∫£o m·∫≠t th√¥ng tin ng∆∞·ªùi d√πng.",
    },
    {
      question: "L√†m sao ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c nh·∫Øc nh·ªü u·ªëng thu·ªëc?",
      answer:
        "Sau khi ƒëƒÉng k√Ω ƒëi·ªÅu tr·ªã, b·∫°n c√≥ th·ªÉ b·∫≠t ch·ª©c nƒÉng nh·∫Øc nh·ªü trong h·ªì s∆° c√° nh√¢n ƒë·ªÉ kh√¥ng b·ªè li·ªÅu thu·ªëc.",
    },
  ];

  const toggleFAQ = (index) => {
    setOpenFAQIndex(openFAQIndex === index ? null : index);
  };

  return (
    <div className="max-w-6xl mx-auto px-6 py-12 bg-white rounded-lg shadow-md">
      <div className="mb-12 overflow-hidden rounded-xl shadow-lg">
        <img
          src={healthcareImage}
          alt="Healthcare"
          className="w-full h-64 object-cover transition-transform duration-300 hover:scale-105"
        />
      </div>

      <section className="mb-16">
        <h1 className="text-4xl font-extrabold text-red-700 mb-6 border-l-4 border-red-600 pl-4">
          Gi·ªõi thi·ªáu v·ªÅ h·ªá th·ªëng
        </h1>

        <div className="space-y-8">
          <div>
            <h2 className="text-2xl font-semibold text-red-600 mb-3 flex items-center gap-2">
              <span>üéØ</span> M·ª•c ƒë√≠ch v√† s·ª© m·ªánh
            </h2>
            <p className="text-gray-700 leading-relaxed">
              H·ªá th·ªëng <strong>HIV Treatment and Medical Services System</strong> ƒë∆∞·ª£c ph√°t tri·ªÉn nh·∫±m tƒÉng c∆∞·ªùng ti·∫øp c·∫≠n d·ªãch v·ª• y t·∫ø v√† ƒëi·ªÅu tr·ªã HIV cho b·ªánh nh√¢n t·∫°i c∆° s·ªü y t·∫ø. Ch√∫ng t√¥i cam k·∫øt h·ªó tr·ª£ ng∆∞·ªùi b·ªánh m·ªôt c√°ch to√†n di·ªán, minh b·∫°ch v√† b·∫£o m·∫≠t.
            </p>
          </div>

          <div>
            <h2 className="text-2xl font-semibold text-red-600 mb-3 flex items-center gap-2">
              <span>üõ†Ô∏è</span> Ch·ª©c nƒÉng ch√≠nh
            </h2>
            <ul className="list-disc list-inside text-gray-700 space-y-2 leading-relaxed">
              <li>ƒêƒÉng k√Ω l·ªãch kh√°m & ƒëi·ªÅu tr·ªã, ch·ªâ ƒë·ªãnh b√°c sƒ© ƒëi·ªÅu tr·ªã</li>
              <li>Tra c·ª©u k·∫øt qu·∫£ x√©t nghi·ªám (CD4, t·∫£i l∆∞·ª£ng HIV, ph√°c ƒë·ªì ARV)</li>
              <li>Nh·∫Øc nh·ªü l·ªãch t√°i kh√°m & u·ªëng thu·ªëc theo ph√°c ƒë·ªì</li>
              <li>ƒê·∫∑t l·ªãch h·∫πn tr·ª±c tuy·∫øn, ƒëƒÉng k√Ω ·∫©n danh</li>
              <li>Qu·∫£n l√Ω h·ªì s∆° b√°c sƒ© v√† b·ªánh nh√¢n</li>
              <li>Dashboard & b√°o c√°o ph·ª•c v·ª• qu·∫£n l√Ω v√† ƒëi·ªÅu tr·ªã</li>
              <li>Chia s·∫ª blog, t√†i li·ªáu gi√°o d·ª•c, g√≥p ph·∫ßn gi·∫£m k·ª≥ th·ªã HIV</li>
            </ul>
          </div>

          <div>
            <h2 className="text-2xl font-semibold text-red-600 mb-3 flex items-center gap-2">
              <span>üë•</span> ƒê·ªôi ng≈© ph√°t tri·ªÉn
            </h2>
            <p className="text-gray-700 leading-relaxed">
              Nh√≥m ph√°t tri·ªÉn g·ªìm c√°c chuy√™n gia c√¥ng ngh·ªá v√† b√°c sƒ© c√≥ nhi·ªÅu nƒÉm kinh nghi·ªám trong ƒëi·ªÅu tr·ªã HIV/AIDS v√† ph√°t tri·ªÉn ph·∫ßn m·ªÅm y t·∫ø.
            </p>
          </div>

          <div>
            <h2 className="text-2xl font-semibold text-red-600 mb-3 flex items-center gap-2">
              <span>üéØ</span> ƒê·ªëi t∆∞·ª£ng ph·ª•c v·ª•
            </h2>
            <p className="text-gray-700 leading-relaxed">
              H·ªá th·ªëng h∆∞·ªõng ƒë·∫øn ph·ª•c v·ª• c√°c ƒë·ªëi t∆∞·ª£ng:
            </p>
            <ul className="list-disc list-inside text-gray-700 mt-2 space-y-1">
              <li>Ng∆∞·ªùi s·ªëng chung v·ªõi HIV/AIDS</li>
              <li>Ng∆∞·ªùi c√≥ nguy c∆° cao (MSM, chuy·ªÉn gi·ªõi n·ªØ, ng∆∞·ªùi ti√™m ch√≠ch ma t√∫y, b·∫°n t√¨nh c·ªßa ng∆∞·ªùi nhi·ªÖm HIV)</li>
              <li>C√°n b·ªô y t·∫ø, b√°c sƒ© v√† nh√¢n vi√™n t∆∞ v·∫•n</li>
              <li>C·ªông ƒë·ªìng, ng∆∞·ªùi th√¢n c·ªßa ng∆∞·ªùi nhi·ªÖm HIV</li>
              <li>C√°c t·ªï ch·ª©c y t·∫ø v√† qu·∫£n l√Ω nh√† n∆∞·ªõc</li>
            </ul>
          </div>

          <div>
            <h2 className="text-2xl font-semibold text-red-600 mb-3 flex items-center gap-2">
              <span>ü§ù</span> ƒê·ªëi t√°c h·ªó tr·ª£
            </h2>
            <ul className="list-disc list-inside text-gray-700 mt-2 space-y-1">
              <li>B·ªánh vi·ªán Nhi·ªát ƒê·ªõi TP.HCM</li>
              <li>Vi·ªán Pasteur</li>
              <li>T·ªï ch·ª©c UNAIDS Vi·ªát Nam</li>
              <li>Trung t√¢m ph√≤ng, ch·ªëng HIV/AIDS TP XYZ</li>
            </ul>
          </div>

          <div>
            <h2 className="text-2xl font-semibold text-red-600 mb-3 flex items-center gap-2">
              <span>üìû</span> Li√™n h·ªá
            </h2>
            <address className="not-italic text-gray-700 space-y-1">
              <p>ƒê·ªãa ch·ªâ: 123 ƒê∆∞·ªùng ABC, Th√†nh ph·ªë XYZ</p>
              <p>Email: <a href="mailto:support@hiv-treatment.com" className="text-red-600 hover:underline">support@hiv-treatment.com</a></p>
              <p>ƒêi·ªán tho·∫°i: <a href="tel:0123456789" className="text-red-600 hover:underline">0123 456 789</a></p>
            </address>
          </div>
        </div>
      </section>

      {/* FAQ */}
      <section className="mb-16">
        <h2 className="text-3xl font-bold text-red-700 mb-8 border-b-2 border-red-600 pb-3">‚ùì C√¢u h·ªèi th∆∞·ªùng g·∫∑p (FAQ)</h2>
        <div className="space-y-4">
          {faqs.map((faq, i) => (
            <div key={i} className="border border-gray-200 rounded-lg shadow-sm overflow-hidden">
              <button
                onClick={() => toggleFAQ(i)}
                className="w-full flex justify-between items-center px-6 py-4 text-left text-gray-800 font-semibold hover:bg-red-50 transition"
                aria-expanded={openFAQIndex === i}
              >
                <span>{faq.question}</span>
                <svg className={`w-5 h-5 transform transition-transform ${openFAQIndex === i ? "rotate-180" : ""}`} fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" d="M19 9l-7 7-7-7" />
                </svg>
              </button>
              {openFAQIndex === i && (
                <div className="px-6 py-3 bg-red-50 text-gray-700 leading-relaxed border-t border-red-200">
                  {faq.answer}
                </div>
              )}
            </div>
          ))}
        </div>
      </section>

      {/* T√†i li·ªáu gi√°o d·ª•c */}
      <section className="mb-16">
        <h2 className="text-3xl font-bold text-red-700 mb-8 border-b-2 border-red-600 pb-3">üìö Th∆∞ vi·ªán t√†i li·ªáu gi√°o d·ª•c</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          {documents.map((doc, idx) => (
            <div
              key={idx}
              className="bg-white border border-gray-200 rounded-xl p-6 shadow hover:shadow-lg transition cursor-pointer"
              onClick={() => setSelectedDoc(doc.link)}
              role="button"
              tabIndex={0}
              onKeyDown={(e) => {
                if (e.key === "Enter" || e.key === " ") setSelectedDoc(doc.link);
              }}
            >
              <h3 className="text-xl font-semibold text-gray-900 mb-3">{doc.title}</h3>
              <p className="text-gray-600 mb-5">{doc.description}</p>
              <button
                className="inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition"
                onClick={(e) => {
                  e.stopPropagation();
                  setSelectedDoc(doc.link);
                }}
              >
                Xem t√†i li·ªáu
                <svg className="w-5 h-5 ml-2" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" d="M10 6h10M10 12h10M10 18h10M4 6h.01M4 12h.01M4 18h.01" />
                </svg>
              </button>
            </div>
          ))}
        </div>

        {selectedDoc && (
          <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50 backdrop-blur-sm p-4">
            <div className="bg-white rounded-xl shadow-xl w-full max-w-6xl max-h-[90vh] flex flex-col overflow-hidden">
              <header className="flex justify-between items-center bg-red-600 text-white px-6 py-4 rounded-t-xl">
                <h3 className="text-xl font-semibold">Xem t√†i li·ªáu</h3>
                <button onClick={() => setSelectedDoc(null)} className="p-2 hover:bg-red-700 rounded-full transition" aria-label="ƒê√≥ng modal">
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </header>
              <div className="flex-1 p-4 bg-gray-50 overflow-auto">
                <object data={selectedDoc} type="application/pdf" className="w-full h-[75vh] rounded-lg bg-white shadow-inner">
                  <p>
                    Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ xem PDF tr·ª±c ti·∫øp. {" "}
                    <a href={selectedDoc} target="_blank" rel="noopener noreferrer" className="text-red-600 hover:text-red-700 underline">
                      T·∫£i xu·ªëng t√†i li·ªáu
                    </a>
                  </p>
                </object>
              </div>
              <footer className="flex justify-end gap-3 px-6 py-4 border-t border-gray-200">
                <button
                  onClick={() => window.open(selectedDoc, "_blank")}
                  className="px-5 py-2 bg-white border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 flex items-center gap-2 transition"
                >
                  <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" stroke="currentColor" strokeWidth="2" viewBox="0 0 24 24">
                    <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z" />
                    <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z" />
                  </svg>
                  M·ªü trong tab m·ªõi
                </button>
                <button onClick={() => setSelectedDoc(null)} className="px-5 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition">
                  ƒê√≥ng
                </button>
              </footer>
            </div>
          </div>
        )}
        <FloatButton.Group
          trigger="hover"
          type="primary"
          style={{ bottom: 100, right: 24  }}
          icon={<PhoneOutlined />}
        >
          <FloatButton
            icon={<MessageOutlined />}
            tooltip={<div>Nh·∫Øn t∆∞ v·∫•n</div>}
            onClick={() =>
              window.open("https://www.facebook.com/bich.tram.570234", "_blank")
            }
          />
          <FloatButton
  icon={<CalendarOutlined />}
  tooltip={<div>ƒê·∫∑t l·ªãch kh√°m</div>}
  onClick={() => navigate("/appointments")}
/>
          <FloatButton
            icon={<FilePdfOutlined />}
            tooltip={<div>T√†i li·ªáu</div>}
            onClick={() =>
              window.open(
                "https://www.prepwatch.org/wp-content/uploads/2019/05/Care_and_Treatment_Guidelines_Vietnam_2017.pdf",
                "_blank"
              )
            }
          />
        </FloatButton.Group>
      </section>
    </div>
  );
}
